{
  "kind":"PodList",
  "apiVersion":"v1",
  "metadata":{

  },
  "items":[
    {
      "metadata":{
        "name":"coredns-5c98db65d4-pgnvj",
        "generateName":"coredns-5c98db65d4-",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/coredns-5c98db65d4-pgnvj",
        "uid":"d7a847d8-d585-457e-8a5e-b2a319748d3c",
        "resourceVersion":"378",
        "creationTimestamp":"2020-06-03T08:28:12Z",
        "labels":{
          "k8s-app":"kube-dns",
          "pod-template-hash":"5c98db65d4"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:28:12.300464426Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"ReplicaSet",
            "name":"coredns-5c98db65d4",
            "uid":"e86268b1-5937-480f-bd7d-fceabc24ee0f",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"config-volume",
            "configMap":{
              "name":"coredns",
              "items":[
                {
                  "key":"Corefile",
                  "path":"Corefile"
                }
              ],
              "defaultMode":420
            }
          },
          {
            "name":"coredns-token-btcnf",
            "secret":{
              "secretName":"coredns-token-btcnf",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"coredns",
            "image":"k8s.gcr.io/coredns:1.3.1",
            "args":[
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports":[
              {
                "name":"dns",
                "containerPort":53,
                "protocol":"UDP"
              },
              {
                "name":"dns-tcp",
                "containerPort":53,
                "protocol":"TCP"
              },
              {
                "name":"metrics",
                "containerPort":9153,
                "protocol":"TCP"
              }
            ],
            "resources":{
              "limits":{
                "memory":"170Mi"
              },
              "requests":{
                "cpu":"100m",
                "memory":"70Mi"
              }
            },
            "volumeMounts":[
              {
                "name":"config-volume",
                "readOnly":true,
                "mountPath":"/etc/coredns"
              },
              {
                "name":"coredns-token-btcnf",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/health",
                "port":8080,
                "scheme":"HTTP"
              },
              "initialDelaySeconds":60,
              "timeoutSeconds":5,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":5
            },
            "readinessProbe":{
              "httpGet":{
                "path":"/health",
                "port":8080,
                "scheme":"HTTP"
              },
              "timeoutSeconds":1,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":3
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent",
            "securityContext":{
              "capabilities":{
                "add":[
                  "NET_BIND_SERVICE"
                ],
                "drop":[
                  "all"
                ]
              },
              "readOnlyRootFilesystem":true,
              "allowPrivilegeEscalation":false
            }
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"Default",
        "nodeSelector":{
          "beta.kubernetes.io/os":"linux"
        },
        "serviceAccountName":"coredns",
        "serviceAccount":"coredns",
        "nodeName":"minikube",
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"CriticalAddonsOnly",
            "operator":"Exists"
          },
          {
            "key":"node-role.kubernetes.io/master",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priorityClassName":"system-cluster-critical",
        "priority":2000000000,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:12Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:23Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:23Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:12Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.3",
        "startTime":"2020-06-03T08:28:12Z",
        "containerStatuses":[
          {
            "name":"coredns",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:28:13Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/coredns:1.3.1",
            "imageID":"docker://sha256:eb516548c180f8a6e0235034ccee2428027896af16a509786da13022fe95fe8c",
            "containerID":"docker://dfea568b1ade43866f7c942e31d4da8563c5231941ebcc7faecc511ca2fc36de"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"cockroachdb-0",
        "generateName":"cockroachdb-",
        "namespace":"default",
        "selfLink":"/api/v1/namespaces/default/pods/cockroachdb-0",
        "uid":"8d4cc2d8-9eb4-4111-906f-e542aa3aeff4",
        "resourceVersion":"2460",
        "creationTimestamp":"2020-06-03T08:51:04Z",
        "labels":{
          "app":"cockroachdb",
          "controller-revision-hash":"cockroachdb-6df4d86fb4",
          "statefulset.kubernetes.io/pod-name":"cockroachdb-0"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:51:04.626815444Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"StatefulSet",
            "name":"cockroachdb",
            "uid":"d8d8194f-afeb-4d8b-afd0-4ca76115538c",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"datadir",
            "persistentVolumeClaim":{
              "claimName":"datadir-cockroachdb-0"
            }
          },
          {
            "name":"default-token-vz2qj",
            "secret":{
              "secretName":"default-token-vz2qj",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"cockroachdb",
            "image":"cockroachdb/cockroach:v20.1.1",
            "command":[
              "/bin/bash",
              "-ecx",
              "exec /cockroach/cockroach start --logtostderr --insecure --advertise-host $(hostname -f) --http-addr 0.0.0.0 --join cockroachdb-0.cockroachdb,cockroachdb-1.cockroachdb,cockroachdb-2.cockroachdb --cache 25% --max-sql-memory 25%"
            ],
            "ports":[
              {
                "name":"grpc",
                "containerPort":26257,
                "protocol":"TCP"
              },
              {
                "name":"http",
                "containerPort":8080,
                "protocol":"TCP"
              }
            ],
            "env":[
              {
                "name":"COCKROACH_CHANNEL",
                "value":"kubernetes-insecure"
              }
            ],
            "resources":{
              "limits":{
                "cpu":"100m"
              },
              "requests":{
                "cpu":"75m"
              }
            },
            "volumeMounts":[
              {
                "name":"datadir",
                "mountPath":"/cockroach/cockroach-data"
              },
              {
                "name":"default-token-vz2qj",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/health",
                "port":"http",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":30,
              "timeoutSeconds":1,
              "periodSeconds":5,
              "successThreshold":1,
              "failureThreshold":3
            },
            "readinessProbe":{
              "httpGet":{
                "path":"/health?ready=1",
                "port":"http",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":10,
              "timeoutSeconds":1,
              "periodSeconds":5,
              "successThreshold":1,
              "failureThreshold":2
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":60,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"default",
        "serviceAccount":"default",
        "nodeName":"minikube",
        "securityContext":{

        },
        "hostname":"cockroachdb-0",
        "subdomain":"cockroachdb",
        "affinity":{
          "podAntiAffinity":{
            "preferredDuringSchedulingIgnoredDuringExecution":[
              {
                "weight":100,
                "podAffinityTerm":{
                  "labelSelector":{
                    "matchExpressions":[
                      {
                        "key":"app",
                        "operator":"In",
                        "values":[
                          "cockroachdb"
                        ]
                      }
                    ]
                  },
                  "topologyKey":"kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z"
          },
          {
            "type":"Ready",
            "status":"False",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z",
            "reason":"ContainersNotReady",
            "message":"containers with unready status: [cockroachdb]"
          },
          {
            "type":"ContainersReady",
            "status":"False",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z",
            "reason":"ContainersNotReady",
            "message":"containers with unready status: [cockroachdb]"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.6",
        "startTime":"2020-06-03T08:51:04Z",
        "containerStatuses":[
          {
            "name":"cockroachdb",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:51:05Z"
              }
            },
            "lastState":{

            },
            "ready":false,
            "restartCount":0,
            "image":"cockroachdb/cockroach:v20.1.1",
            "imageID":"docker-pullable://cockroachdb/cockroach@sha256:1d21991893d8bfd461ed6669cb070ff20f66308aecd4f646ddd44cfff05cc1e2",
            "containerID":"docker://79f18daf13c7cd2cdbc4d0fc652e808c5aab1a7371bb8f37c644ae0cece51e3f"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"metrics-server-67fb648c5-xcx7h",
        "generateName":"metrics-server-67fb648c5-",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/metrics-server-67fb648c5-xcx7h",
        "uid":"ab181f21-27ea-48b5-9b14-197947d5d221",
        "resourceVersion":"2346",
        "creationTimestamp":"2020-06-03T08:50:23Z",
        "labels":{
          "k8s-app":"metrics-server",
          "pod-template-hash":"67fb648c5"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:50:23.887399506Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"ReplicaSet",
            "name":"metrics-server-67fb648c5",
            "uid":"3ae50617-a9cb-45a5-8777-c06cf39022a4",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"default-token-tvzrp",
            "secret":{
              "secretName":"default-token-tvzrp",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"metrics-server",
            "image":"k8s.gcr.io/metrics-server-amd64:v0.2.1",
            "command":[
              "/metrics-server",
              "--source=kubernetes.summary_api:https://kubernetes.default?kubeletHttps=true\u0026kubeletPort=10250\u0026insecure=true"
            ],
            "resources":{

            },
            "volumeMounts":[
              {
                "name":"default-token-tvzrp",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"Always"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"default",
        "serviceAccount":"default",
        "nodeName":"minikube",
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:50:23Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:50:31Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:50:31Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:50:23Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.9",
        "startTime":"2020-06-03T08:50:23Z",
        "containerStatuses":[
          {
            "name":"metrics-server",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:50:31Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/metrics-server-amd64:v0.2.1",
            "imageID":"docker-pullable://k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892",
            "containerID":"docker://0b349500269cac9e526b7b6e96043b45be1f5f2f37c5dbacf5376d9c83f156ab"
          }
        ],
        "qosClass":"BestEffort"
      }
    },
    {
      "metadata":{
        "name":"kindnet-hdg22",
        "generateName":"kindnet-",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/kindnet-hdg22",
        "uid":"f7a26d46-2988-442a-b32f-42f6a4d800a6",
        "resourceVersion":"349",
        "creationTimestamp":"2020-06-03T08:28:11Z",
        "labels":{
          "app":"kindnet",
          "controller-revision-hash":"97dc74cf7",
          "k8s-app":"kindnet",
          "pod-template-generation":"1",
          "tier":"node"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:28:11.755136549Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"DaemonSet",
            "name":"kindnet",
            "uid":"6db97a4c-37e9-4ef2-9251-893ab31aead8",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"cni-cfg",
            "hostPath":{
              "path":"/etc/cni/net.d",
              "type":""
            }
          },
          {
            "name":"xtables-lock",
            "hostPath":{
              "path":"/run/xtables.lock",
              "type":"FileOrCreate"
            }
          },
          {
            "name":"lib-modules",
            "hostPath":{
              "path":"/lib/modules",
              "type":""
            }
          },
          {
            "name":"kindnet-token-rk74g",
            "secret":{
              "secretName":"kindnet-token-rk74g",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"kindnet-cni",
            "image":"kindest/kindnetd:0.5.3",
            "env":[
              {
                "name":"HOST_IP",
                "valueFrom":{
                  "fieldRef":{
                    "apiVersion":"v1",
                    "fieldPath":"status.hostIP"
                  }
                }
              },
              {
                "name":"POD_IP",
                "valueFrom":{
                  "fieldRef":{
                    "apiVersion":"v1",
                    "fieldPath":"status.podIP"
                  }
                }
              },
              {
                "name":"POD_SUBNET",
                "value":"10.244.0.0/16"
              }
            ],
            "resources":{
              "limits":{
                "cpu":"100m",
                "memory":"50Mi"
              },
              "requests":{
                "cpu":"100m",
                "memory":"50Mi"
              }
            },
            "volumeMounts":[
              {
                "name":"cni-cfg",
                "mountPath":"/etc/cni/net.d"
              },
              {
                "name":"xtables-lock",
                "mountPath":"/run/xtables.lock"
              },
              {
                "name":"lib-modules",
                "readOnly":true,
                "mountPath":"/lib/modules"
              },
              {
                "name":"kindnet-token-rk74g",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent",
            "securityContext":{
              "capabilities":{
                "add":[
                  "NET_RAW",
                  "NET_ADMIN"
                ]
              },
              "privileged":false
            }
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"kindnet",
        "serviceAccount":"kindnet",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "affinity":{
          "nodeAffinity":{
            "requiredDuringSchedulingIgnoredDuringExecution":{
              "nodeSelectorTerms":[
                {
                  "matchFields":[
                    {
                      "key":"metadata.name",
                      "operator":"In",
                      "values":[
                        "minikube"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute"
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute"
          },
          {
            "key":"node.kubernetes.io/disk-pressure",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/memory-pressure",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/pid-pressure",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/unschedulable",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/network-unavailable",
            "operator":"Exists",
            "effect":"NoSchedule"
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:11Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:21Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:21Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:11Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:28:11Z",
        "containerStatuses":[
          {
            "name":"kindnet-cni",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:28:21Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"kindest/kindnetd:0.5.3",
            "imageID":"docker-pullable://kindest/kindnetd@sha256:bc1833b3da442bb639008dd5a62861a0419d3f64b58fce6fb38b749105232555",
            "containerID":"docker://ce0f6fe896a0cbe08931e4aad84e36047d16cb4bfc30a924080583389bb0b70f"
          }
        ],
        "qosClass":"Guaranteed"
      }
    },
    {
      "metadata":{
        "name":"kube-proxy-njc6c",
        "generateName":"kube-proxy-",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/kube-proxy-njc6c",
        "uid":"9401b3e4-5dce-407a-aa84-e57ff7cad360",
        "resourceVersion":"356",
        "creationTimestamp":"2020-06-03T08:28:11Z",
        "labels":{
          "controller-revision-hash":"7bdbc788b8",
          "k8s-app":"kube-proxy",
          "pod-template-generation":"1"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:28:11.792317474Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"DaemonSet",
            "name":"kube-proxy",
            "uid":"7a99a8f5-8f3d-41cb-98c0-5c2a7dc01d6a",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"kube-proxy",
            "configMap":{
              "name":"kube-proxy",
              "defaultMode":420
            }
          },
          {
            "name":"xtables-lock",
            "hostPath":{
              "path":"/run/xtables.lock",
              "type":"FileOrCreate"
            }
          },
          {
            "name":"lib-modules",
            "hostPath":{
              "path":"/lib/modules",
              "type":""
            }
          },
          {
            "name":"kube-proxy-token-w8q2x",
            "secret":{
              "secretName":"kube-proxy-token-w8q2x",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"kube-proxy",
            "image":"k8s.gcr.io/kube-proxy:v1.15.0",
            "command":[
              "/usr/local/bin/kube-proxy",
              "--config=/var/lib/kube-proxy/config.conf",
              "--hostname-override=$(NODE_NAME)"
            ],
            "env":[
              {
                "name":"NODE_NAME",
                "valueFrom":{
                  "fieldRef":{
                    "apiVersion":"v1",
                    "fieldPath":"spec.nodeName"
                  }
                }
              }
            ],
            "resources":{

            },
            "volumeMounts":[
              {
                "name":"kube-proxy",
                "mountPath":"/var/lib/kube-proxy"
              },
              {
                "name":"xtables-lock",
                "mountPath":"/run/xtables.lock"
              },
              {
                "name":"lib-modules",
                "readOnly":true,
                "mountPath":"/lib/modules"
              },
              {
                "name":"kube-proxy-token-w8q2x",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent",
            "securityContext":{
              "privileged":true
            }
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "nodeSelector":{
          "beta.kubernetes.io/os":"linux"
        },
        "serviceAccountName":"kube-proxy",
        "serviceAccount":"kube-proxy",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "affinity":{
          "nodeAffinity":{
            "requiredDuringSchedulingIgnoredDuringExecution":{
              "nodeSelectorTerms":[
                {
                  "matchFields":[
                    {
                      "key":"metadata.name",
                      "operator":"In",
                      "values":[
                        "minikube"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"CriticalAddonsOnly",
            "operator":"Exists"
          },
          {
            "operator":"Exists"
          },
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute"
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute"
          },
          {
            "key":"node.kubernetes.io/disk-pressure",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/memory-pressure",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/pid-pressure",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/unschedulable",
            "operator":"Exists",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/network-unavailable",
            "operator":"Exists",
            "effect":"NoSchedule"
          }
        ],
        "priorityClassName":"system-node-critical",
        "priority":2000001000,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:11Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:13Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:13Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:11Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:28:11Z",
        "containerStatuses":[
          {
            "name":"kube-proxy",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:28:12Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/kube-proxy:v1.15.0",
            "imageID":"docker://sha256:d235b23c3570005c864ad8e2e3d6314f17fe398a8a8833bbb8bbfe5db0aa6932",
            "containerID":"docker://5ad75b220e7bba0233f1fca5f324bf1dab574d32f8190fb05c1af1bf6d85df4e"
          }
        ],
        "qosClass":"BestEffort"
      }
    },
    {
      "metadata":{
        "name":"kube-state-metrics-6766c6d46b-rwzpw",
        "generateName":"kube-state-metrics-6766c6d46b-",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/kube-state-metrics-6766c6d46b-rwzpw",
        "uid":"f7cc2b8f-2346-4b9d-beb8-a0a9e03c0b81",
        "resourceVersion":"504",
        "creationTimestamp":"2020-06-03T08:28:58Z",
        "labels":{
          "k8s-app":"kube-state-metrics",
          "pod-template-hash":"6766c6d46b"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:28:58.285358922Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"ReplicaSet",
            "name":"kube-state-metrics-6766c6d46b",
            "uid":"50d18019-198b-4e83-85ac-3c5e4e74db5d",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"kube-state-metrics-token-kdc2t",
            "secret":{
              "secretName":"kube-state-metrics-token-kdc2t",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"kube-state-metrics",
            "image":"quay.io/coreos/kube-state-metrics:v1.7.2",
            "ports":[
              {
                "name":"http-metrics",
                "containerPort":8080,
                "protocol":"TCP"
              },
              {
                "name":"telemetry",
                "containerPort":8081,
                "protocol":"TCP"
              }
            ],
            "resources":{

            },
            "volumeMounts":[
              {
                "name":"kube-state-metrics-token-kdc2t",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe":{
              "httpGet":{
                "path":"/healthz",
                "port":8080,
                "scheme":"HTTP"
              },
              "initialDelaySeconds":5,
              "timeoutSeconds":5,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":3
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"kube-state-metrics",
        "serviceAccount":"kube-state-metrics",
        "nodeName":"minikube",
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:58Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:29:13Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:29:13Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:58Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.4",
        "startTime":"2020-06-03T08:28:58Z",
        "containerStatuses":[
          {
            "name":"kube-state-metrics",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:29:04Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"quay.io/coreos/kube-state-metrics:v1.7.2",
            "imageID":"docker-pullable://quay.io/coreos/kube-state-metrics@sha256:99a3e3297e281fec09fe850d6d4bccf4d9fd58ff62a5b37764d8a8bd1e79bd14",
            "containerID":"docker://b34301f9952f74aaf2809628658783c5bb7760eff18d7318a80e047ce000ba2a"
          }
        ],
        "qosClass":"BestEffort"
      }
    },
    {
      "metadata":{
        "name":"etcd-minikube",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/etcd-minikube",
        "uid":"a6a5b4e3f63e9bc7d2699d4417f9fc90",
        "creationTimestamp":null,
        "labels":{
          "component":"etcd",
          "tier":"control-plane"
        },
        "annotations":{
          "kubernetes.io/config.hash":"a6a5b4e3f63e9bc7d2699d4417f9fc90",
          "kubernetes.io/config.seen":"2020-06-03T08:27:41.497188634Z",
          "kubernetes.io/config.source":"file"
        }
      },
      "spec":{
        "volumes":[
          {
            "name":"etcd-certs",
            "hostPath":{
              "path":"/var/lib/minikube/certs/etcd",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"etcd-data",
            "hostPath":{
              "path":"/var/lib/minikube/etcd",
              "type":"DirectoryOrCreate"
            }
          }
        ],
        "containers":[
          {
            "name":"etcd",
            "image":"k8s.gcr.io/etcd:3.3.10",
            "command":[
              "etcd",
              "--advertise-client-urls=https://172.17.0.2:2379",
              "--cert-file=/var/lib/minikube/certs/etcd/server.crt",
              "--client-cert-auth=true",
              "--data-dir=/var/lib/minikube/etcd",
              "--initial-advertise-peer-urls=https://172.17.0.2:2380",
              "--initial-cluster=minikube=https://172.17.0.2:2380",
              "--key-file=/var/lib/minikube/certs/etcd/server.key",
              "--listen-client-urls=https://127.0.0.1:2379,https://172.17.0.2:2379",
              "--listen-metrics-urls=http://127.0.0.1:2381,http://172.17.0.2:2381",
              "--listen-peer-urls=https://172.17.0.2:2380",
              "--name=minikube",
              "--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt",
              "--peer-client-cert-auth=true",
              "--peer-key-file=/var/lib/minikube/certs/etcd/peer.key",
              "--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt",
              "--snapshot-count=10000",
              "--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"
            ],
            "resources":{

            },
            "volumeMounts":[
              {
                "name":"etcd-data",
                "mountPath":"/var/lib/minikube/etcd"
              },
              {
                "name":"etcd-certs",
                "mountPath":"/var/lib/minikube/certs/etcd"
              }
            ],
            "livenessProbe":{
              "exec":{
                "command":[
                  "/bin/sh",
                  "-ec",
                  "ETCDCTL_API=3 etcdctl --endpoints=https://[127.0.0.1]:2379 --cacert=/var/lib/minikube/certs/etcd/ca.crt --cert=/var/lib/minikube/certs/etcd/healthcheck-client.crt --key=/var/lib/minikube/certs/etcd/healthcheck-client.key get foo"
                ]
              },
              "initialDelaySeconds":15,
              "timeoutSeconds":15,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":8
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "operator":"Exists",
            "effect":"NoExecute"
          }
        ],
        "priorityClassName":"system-cluster-critical",
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:27:47Z",
        "containerStatuses":[
          {
            "name":"etcd",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:27:48Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/etcd:3.3.10",
            "imageID":"docker://sha256:2c4adeb21b4ff8ed3309d0e42b6b4ae39872399f7b37e0856e673b13c4aba13d",
            "containerID":"docker://fdd782582f73cb0a09cd3e985fecaf8f7833d5077d7c4a96559223c7a10a3160"
          }
        ],
        "qosClass":"BestEffort"
      }
    },
    {
      "metadata":{
        "name":"kube-controller-manager-minikube",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/kube-controller-manager-minikube",
        "uid":"6407e7ce6709fb0b62e75f67e554a680",
        "creationTimestamp":null,
        "labels":{
          "component":"kube-controller-manager",
          "tier":"control-plane"
        },
        "annotations":{
          "kubernetes.io/config.hash":"6407e7ce6709fb0b62e75f67e554a680",
          "kubernetes.io/config.seen":"2020-06-03T08:27:41.497195969Z",
          "kubernetes.io/config.source":"file"
        }
      },
      "spec":{
        "volumes":[
          {
            "name":"ca-certs",
            "hostPath":{
              "path":"/etc/ssl/certs",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"etc-ca-certificates",
            "hostPath":{
              "path":"/etc/ca-certificates",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"k8s-certs",
            "hostPath":{
              "path":"/var/lib/minikube/certs",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"kubeconfig",
            "hostPath":{
              "path":"/etc/kubernetes/controller-manager.conf",
              "type":"FileOrCreate"
            }
          },
          {
            "name":"usr-local-share-ca-certificates",
            "hostPath":{
              "path":"/usr/local/share/ca-certificates",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"usr-share-ca-certificates",
            "hostPath":{
              "path":"/usr/share/ca-certificates",
              "type":"DirectoryOrCreate"
            }
          }
        ],
        "containers":[
          {
            "name":"kube-controller-manager",
            "image":"k8s.gcr.io/kube-controller-manager:v1.15.0",
            "command":[
              "kube-controller-manager",
              "--allocate-node-cidrs=true",
              "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
              "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
              "--bind-address=127.0.0.1",
              "--client-ca-file=/var/lib/minikube/certs/ca.crt",
              "--cluster-cidr=10.244.0.0/16",
              "--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt",
              "--cluster-signing-key-file=/var/lib/minikube/certs/ca.key",
              "--controllers=*,bootstrapsigner,tokencleaner",
              "--kubeconfig=/etc/kubernetes/controller-manager.conf",
              "--leader-elect=true",
              "--node-cidr-mask-size=24",
              "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
              "--root-ca-file=/var/lib/minikube/certs/ca.crt",
              "--service-account-private-key-file=/var/lib/minikube/certs/sa.key",
              "--use-service-account-credentials=true"
            ],
            "resources":{
              "requests":{
                "cpu":"200m"
              }
            },
            "volumeMounts":[
              {
                "name":"ca-certs",
                "readOnly":true,
                "mountPath":"/etc/ssl/certs"
              },
              {
                "name":"etc-ca-certificates",
                "readOnly":true,
                "mountPath":"/etc/ca-certificates"
              },
              {
                "name":"k8s-certs",
                "readOnly":true,
                "mountPath":"/var/lib/minikube/certs"
              },
              {
                "name":"kubeconfig",
                "readOnly":true,
                "mountPath":"/etc/kubernetes/controller-manager.conf"
              },
              {
                "name":"usr-local-share-ca-certificates",
                "readOnly":true,
                "mountPath":"/usr/local/share/ca-certificates"
              },
              {
                "name":"usr-share-ca-certificates",
                "readOnly":true,
                "mountPath":"/usr/share/ca-certificates"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/healthz",
                "port":10252,
                "host":"127.0.0.1",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":15,
              "timeoutSeconds":15,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":8
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "operator":"Exists",
            "effect":"NoExecute"
          }
        ],
        "priorityClassName":"system-cluster-critical",
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:27:47Z",
        "containerStatuses":[
          {
            "name":"kube-controller-manager",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:27:48Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/kube-controller-manager:v1.15.0",
            "imageID":"docker://sha256:8328bb49b6529c5032e45bfa4e201e7b907b62bb655dc6cc1f06a930e622339f",
            "containerID":"docker://a752394d34858ee6bca3ce12ce5024cf00ca7621b646c1c65f350911c3f0e6c9"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"storage-provisioner",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/storage-provisioner",
        "uid":"9f24b702-4f90-4f0e-b966-d90cadf23944",
        "resourceVersion":"333",
        "creationTimestamp":"2020-06-03T08:28:00Z",
        "labels":{
          "addonmanager.kubernetes.io/mode":"Reconcile",
          "integration-test":"storage-provisioner"
        },
        "annotations":{
          "kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"integration-test\":\"storage-provisioner\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"command\":[\"/storage-provisioner\"],\"image\":\"gcr.io/k8s-minikube/storage-provisioner:v1.8.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"storage-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"hostNetwork\":true,\"serviceAccountName\":\"storage-provisioner\",\"volumes\":[{\"hostPath\":{\"path\":\"/tmp\",\"type\":\"Directory\"},\"name\":\"tmp\"}]}}\n",
          "kubernetes.io/config.seen":"2020-06-03T08:28:11.693531698Z",
          "kubernetes.io/config.source":"api"
        }
      },
      "spec":{
        "volumes":[
          {
            "name":"tmp",
            "hostPath":{
              "path":"/tmp",
              "type":"Directory"
            }
          },
          {
            "name":"storage-provisioner-token-9czg7",
            "secret":{
              "secretName":"storage-provisioner-token-9czg7",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"storage-provisioner",
            "image":"gcr.io/k8s-minikube/storage-provisioner:v1.8.1",
            "command":[
              "/storage-provisioner"
            ],
            "resources":{

            },
            "volumeMounts":[
              {
                "name":"tmp",
                "mountPath":"/tmp"
              },
              {
                "name":"storage-provisioner-token-9czg7",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"storage-provisioner",
        "serviceAccount":"storage-provisioner",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:11Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:44Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:44Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:11Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:28:11Z",
        "containerStatuses":[
          {
            "name":"storage-provisioner",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:28:43Z"
              }
            },
            "lastState":{
              "terminated":{
                "exitCode":1,
                "reason":"Error",
                "startedAt":"2020-06-03T08:28:12Z",
                "finishedAt":"2020-06-03T08:28:43Z",
                "containerID":"docker://64d91c139a02f71e57074282bb7ed83d3bb713d6cf1115c257b830a819ef9e83"
              }
            },
            "ready":true,
            "restartCount":1,
            "image":"gcr.io/k8s-minikube/storage-provisioner:v1.8.1",
            "imageID":"docker://sha256:4689081edb103a9e8174bf23a255bfbe0b2d9ed82edc907abab6989d1c60f02c",
            "containerID":"docker://aa3cfeabbe1bf44bd43071f5eee2beb3a5f72429ddf0489663f4eb7f27e7106f"
          }
        ],
        "qosClass":"BestEffort"
      }
    },
    {
      "metadata":{
        "name":"cockroachdb-1",
        "generateName":"cockroachdb-",
        "namespace":"default",
        "selfLink":"/api/v1/namespaces/default/pods/cockroachdb-1",
        "uid":"75cd6671-8e3b-4a00-80dc-d3ed91c0ffda",
        "resourceVersion":"2466",
        "creationTimestamp":"2020-06-03T08:51:04Z",
        "labels":{
          "app":"cockroachdb",
          "controller-revision-hash":"cockroachdb-6df4d86fb4",
          "statefulset.kubernetes.io/pod-name":"cockroachdb-1"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:51:04.647630048Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"StatefulSet",
            "name":"cockroachdb",
            "uid":"d8d8194f-afeb-4d8b-afd0-4ca76115538c",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"datadir",
            "persistentVolumeClaim":{
              "claimName":"datadir-cockroachdb-1"
            }
          },
          {
            "name":"default-token-vz2qj",
            "secret":{
              "secretName":"default-token-vz2qj",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"cockroachdb",
            "image":"cockroachdb/cockroach:v20.1.1",
            "command":[
              "/bin/bash",
              "-ecx",
              "exec /cockroach/cockroach start --logtostderr --insecure --advertise-host $(hostname -f) --http-addr 0.0.0.0 --join cockroachdb-0.cockroachdb,cockroachdb-1.cockroachdb,cockroachdb-2.cockroachdb --cache 25% --max-sql-memory 25%"
            ],
            "ports":[
              {
                "name":"grpc",
                "containerPort":26257,
                "protocol":"TCP"
              },
              {
                "name":"http",
                "containerPort":8080,
                "protocol":"TCP"
              }
            ],
            "env":[
              {
                "name":"COCKROACH_CHANNEL",
                "value":"kubernetes-insecure"
              }
            ],
            "resources":{
              "limits":{
                "cpu":"100m"
              },
              "requests":{
                "cpu":"75m"
              }
            },
            "volumeMounts":[
              {
                "name":"datadir",
                "mountPath":"/cockroach/cockroach-data"
              },
              {
                "name":"default-token-vz2qj",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/health",
                "port":"http",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":30,
              "timeoutSeconds":1,
              "periodSeconds":5,
              "successThreshold":1,
              "failureThreshold":3
            },
            "readinessProbe":{
              "httpGet":{
                "path":"/health?ready=1",
                "port":"http",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":10,
              "timeoutSeconds":1,
              "periodSeconds":5,
              "successThreshold":1,
              "failureThreshold":2
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":60,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"default",
        "serviceAccount":"default",
        "nodeName":"minikube",
        "securityContext":{

        },
        "hostname":"cockroachdb-1",
        "subdomain":"cockroachdb",
        "affinity":{
          "podAntiAffinity":{
            "preferredDuringSchedulingIgnoredDuringExecution":[
              {
                "weight":100,
                "podAffinityTerm":{
                  "labelSelector":{
                    "matchExpressions":[
                      {
                        "key":"app",
                        "operator":"In",
                        "values":[
                          "cockroachdb"
                        ]
                      }
                    ]
                  },
                  "topologyKey":"kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z"
          },
          {
            "type":"Ready",
            "status":"False",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z",
            "reason":"ContainersNotReady",
            "message":"containers with unready status: [cockroachdb]"
          },
          {
            "type":"ContainersReady",
            "status":"False",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z",
            "reason":"ContainersNotReady",
            "message":"containers with unready status: [cockroachdb]"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:51:04Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.8",
        "startTime":"2020-06-03T08:51:04Z",
        "containerStatuses":[
          {
            "name":"cockroachdb",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:51:06Z"
              }
            },
            "lastState":{

            },
            "ready":false,
            "restartCount":0,
            "image":"cockroachdb/cockroach:v20.1.1",
            "imageID":"docker-pullable://cockroachdb/cockroach@sha256:1d21991893d8bfd461ed6669cb070ff20f66308aecd4f646ddd44cfff05cc1e2",
            "containerID":"docker://bffd8dfb3d9ab3d30429890191f43aea463cd37ff4dc4d592b3b38b29f5930c2"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"kube-apiserver-minikube",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/kube-apiserver-minikube",
        "uid":"70bb246b3474dd729a3a1915e1dcb88d",
        "creationTimestamp":null,
        "labels":{
          "component":"kube-apiserver",
          "tier":"control-plane"
        },
        "annotations":{
          "kubernetes.io/config.hash":"70bb246b3474dd729a3a1915e1dcb88d",
          "kubernetes.io/config.seen":"2020-06-03T08:27:41.497194448Z",
          "kubernetes.io/config.source":"file"
        }
      },
      "spec":{
        "volumes":[
          {
            "name":"ca-certs",
            "hostPath":{
              "path":"/etc/ssl/certs",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"etc-ca-certificates",
            "hostPath":{
              "path":"/etc/ca-certificates",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"k8s-certs",
            "hostPath":{
              "path":"/var/lib/minikube/certs",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"usr-local-share-ca-certificates",
            "hostPath":{
              "path":"/usr/local/share/ca-certificates",
              "type":"DirectoryOrCreate"
            }
          },
          {
            "name":"usr-share-ca-certificates",
            "hostPath":{
              "path":"/usr/share/ca-certificates",
              "type":"DirectoryOrCreate"
            }
          }
        ],
        "containers":[
          {
            "name":"kube-apiserver",
            "image":"k8s.gcr.io/kube-apiserver:v1.15.0",
            "command":[
              "kube-apiserver",
              "--advertise-address=172.17.0.2",
              "--allow-privileged=true",
              "--authorization-mode=Node,RBAC",
              "--client-ca-file=/var/lib/minikube/certs/ca.crt",
              "--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota",
              "--enable-bootstrap-token-auth=true",
              "--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt",
              "--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt",
              "--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key",
              "--etcd-servers=https://127.0.0.1:2379",
              "--insecure-port=0",
              "--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt",
              "--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key",
              "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
              "--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt",
              "--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key",
              "--requestheader-allowed-names=front-proxy-client",
              "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
              "--requestheader-extra-headers-prefix=X-Remote-Extra-",
              "--requestheader-group-headers=X-Remote-Group",
              "--requestheader-username-headers=X-Remote-User",
              "--secure-port=8443",
              "--service-account-key-file=/var/lib/minikube/certs/sa.pub",
              "--service-cluster-ip-range=10.96.0.0/12",
              "--tls-cert-file=/var/lib/minikube/certs/apiserver.crt",
              "--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"
            ],
            "resources":{
              "requests":{
                "cpu":"250m"
              }
            },
            "volumeMounts":[
              {
                "name":"ca-certs",
                "readOnly":true,
                "mountPath":"/etc/ssl/certs"
              },
              {
                "name":"etc-ca-certificates",
                "readOnly":true,
                "mountPath":"/etc/ca-certificates"
              },
              {
                "name":"k8s-certs",
                "readOnly":true,
                "mountPath":"/var/lib/minikube/certs"
              },
              {
                "name":"usr-local-share-ca-certificates",
                "readOnly":true,
                "mountPath":"/usr/local/share/ca-certificates"
              },
              {
                "name":"usr-share-ca-certificates",
                "readOnly":true,
                "mountPath":"/usr/share/ca-certificates"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/healthz",
                "port":8443,
                "host":"172.17.0.2",
                "scheme":"HTTPS"
              },
              "initialDelaySeconds":15,
              "timeoutSeconds":15,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":8
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "operator":"Exists",
            "effect":"NoExecute"
          }
        ],
        "priorityClassName":"system-cluster-critical",
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:27:47Z",
        "containerStatuses":[
          {
            "name":"kube-apiserver",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:27:48Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/kube-apiserver:v1.15.0",
            "imageID":"docker://sha256:201c7a8403125400f95ca6e215aed5735f11369a617abcdc263c3e92b3367fc0",
            "containerID":"docker://8ad63d005d01eabb7dce38e5f08405531c025e31545beeeb72d25e25c9c5e791"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"kube-scheduler-minikube",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/kube-scheduler-minikube",
        "uid":"31d9ee8b7fb12e797dc981a8686f6b2b",
        "creationTimestamp":null,
        "labels":{
          "component":"kube-scheduler",
          "tier":"control-plane"
        },
        "annotations":{
          "kubernetes.io/config.hash":"31d9ee8b7fb12e797dc981a8686f6b2b",
          "kubernetes.io/config.seen":"2020-06-03T08:27:41.49719696Z",
          "kubernetes.io/config.source":"file"
        }
      },
      "spec":{
        "volumes":[
          {
            "name":"kubeconfig",
            "hostPath":{
              "path":"/etc/kubernetes/scheduler.conf",
              "type":"FileOrCreate"
            }
          }
        ],
        "containers":[
          {
            "name":"kube-scheduler",
            "image":"k8s.gcr.io/kube-scheduler:v1.15.0",
            "command":[
              "kube-scheduler",
              "--bind-address=127.0.0.1",
              "--kubeconfig=/etc/kubernetes/scheduler.conf",
              "--leader-elect=true"
            ],
            "resources":{
              "requests":{
                "cpu":"100m"
              }
            },
            "volumeMounts":[
              {
                "name":"kubeconfig",
                "readOnly":true,
                "mountPath":"/etc/kubernetes/scheduler.conf"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/healthz",
                "port":10251,
                "host":"127.0.0.1",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":15,
              "timeoutSeconds":15,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":8
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "nodeName":"minikube",
        "hostNetwork":true,
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "operator":"Exists",
            "effect":"NoExecute"
          }
        ],
        "priorityClassName":"system-cluster-critical",
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:49Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:27:47Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.17.0.2",
        "startTime":"2020-06-03T08:27:47Z",
        "containerStatuses":[
          {
            "name":"kube-scheduler",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:27:48Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/kube-scheduler:v1.15.0",
            "imageID":"docker://sha256:2d3813851e87438d3b87bcd2eaa0a54d963d061286f5a7787bc26f483787769f",
            "containerID":"docker://7b3c48c8bdae1646e303ce0cfbd8b28c12aa49260c923ea2bbec7ee2bc3c6d4a"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"coredns-5c98db65d4-m76hk",
        "generateName":"coredns-5c98db65d4-",
        "namespace":"kube-system",
        "selfLink":"/api/v1/namespaces/kube-system/pods/coredns-5c98db65d4-m76hk",
        "uid":"37b0dd75-78e9-4eed-9d33-3fa0eee2f6f3",
        "resourceVersion":"384",
        "creationTimestamp":"2020-06-03T08:28:12Z",
        "labels":{
          "k8s-app":"kube-dns",
          "pod-template-hash":"5c98db65d4"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:28:12.315172132Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"ReplicaSet",
            "name":"coredns-5c98db65d4",
            "uid":"e86268b1-5937-480f-bd7d-fceabc24ee0f",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"config-volume",
            "configMap":{
              "name":"coredns",
              "items":[
                {
                  "key":"Corefile",
                  "path":"Corefile"
                }
              ],
              "defaultMode":420
            }
          },
          {
            "name":"coredns-token-btcnf",
            "secret":{
              "secretName":"coredns-token-btcnf",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"coredns",
            "image":"k8s.gcr.io/coredns:1.3.1",
            "args":[
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports":[
              {
                "name":"dns",
                "containerPort":53,
                "protocol":"UDP"
              },
              {
                "name":"dns-tcp",
                "containerPort":53,
                "protocol":"TCP"
              },
              {
                "name":"metrics",
                "containerPort":9153,
                "protocol":"TCP"
              }
            ],
            "resources":{
              "limits":{
                "memory":"170Mi"
              },
              "requests":{
                "cpu":"100m",
                "memory":"70Mi"
              }
            },
            "volumeMounts":[
              {
                "name":"config-volume",
                "readOnly":true,
                "mountPath":"/etc/coredns"
              },
              {
                "name":"coredns-token-btcnf",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/health",
                "port":8080,
                "scheme":"HTTP"
              },
              "initialDelaySeconds":60,
              "timeoutSeconds":5,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":5
            },
            "readinessProbe":{
              "httpGet":{
                "path":"/health",
                "port":8080,
                "scheme":"HTTP"
              },
              "timeoutSeconds":1,
              "periodSeconds":10,
              "successThreshold":1,
              "failureThreshold":3
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent",
            "securityContext":{
              "capabilities":{
                "add":[
                  "NET_BIND_SERVICE"
                ],
                "drop":[
                  "all"
                ]
              },
              "readOnlyRootFilesystem":true,
              "allowPrivilegeEscalation":false
            }
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"Default",
        "nodeSelector":{
          "beta.kubernetes.io/os":"linux"
        },
        "serviceAccountName":"coredns",
        "serviceAccount":"coredns",
        "nodeName":"minikube",
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"CriticalAddonsOnly",
            "operator":"Exists"
          },
          {
            "key":"node-role.kubernetes.io/master",
            "effect":"NoSchedule"
          },
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priorityClassName":"system-cluster-critical",
        "priority":2000000000,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:12Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:18Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:18Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:28:12Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.2",
        "startTime":"2020-06-03T08:28:12Z",
        "containerStatuses":[
          {
            "name":"coredns",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:28:13Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"k8s.gcr.io/coredns:1.3.1",
            "imageID":"docker://sha256:eb516548c180f8a6e0235034ccee2428027896af16a509786da13022fe95fe8c",
            "containerID":"docker://6477bc2683e263b32499974f69d7b4ad34702aeba4032a911ab09860552639df"
          }
        ],
        "qosClass":"Burstable"
      }
    },
    {
      "metadata":{
        "name":"sh",
        "namespace":"default",
        "selfLink":"/api/v1/namespaces/default/pods/sh",
        "uid":"4d69f264-f048-4f99-a372-f7d722a75fce",
        "resourceVersion":"1239",
        "creationTimestamp":"2020-06-03T08:38:26Z",
        "labels":{
          "run":"sh"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:38:26.599644004Z",
          "kubernetes.io/config.source":"api"
        }
      },
      "spec":{
        "volumes":[
          {
            "name":"newrelic-token-wnv88",
            "secret":{
              "secretName":"newrelic-token-wnv88",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"sh",
            "image":"debian",
            "resources":{

            },
            "volumeMounts":[
              {
                "name":"newrelic-token-wnv88",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"Always",
            "stdin":true,
            "stdinOnce":true,
            "tty":true
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":30,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"newrelic",
        "serviceAccount":"newrelic",
        "nodeName":"minikube",
        "securityContext":{

        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:38:26Z"
          },
          {
            "type":"Ready",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:38:29Z"
          },
          {
            "type":"ContainersReady",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:38:29Z"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:38:26Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.5",
        "startTime":"2020-06-03T08:38:26Z",
        "containerStatuses":[
          {
            "name":"sh",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:38:29Z"
              }
            },
            "lastState":{

            },
            "ready":true,
            "restartCount":0,
            "image":"debian:latest",
            "imageID":"docker-pullable://debian@sha256:4ab3309ba955211d1db92f405be609942b595a720de789286376f030502ffd6f",
            "containerID":"docker://002b15f5c8df28c8e9562f6fb23921cb98b2325c7c9bc93333e8561efd7d8963"
          }
        ],
        "qosClass":"BestEffort"
      }
    },
    {
      "metadata":{
        "name":"cockroachdb-2",
        "generateName":"cockroachdb-",
        "namespace":"default",
        "selfLink":"/api/v1/namespaces/default/pods/cockroachdb-2",
        "uid":"b8d4f6b9-7ee7-4e75-b932-755f9e02aa2d",
        "resourceVersion":"2736",
        "creationTimestamp":"2020-06-03T08:53:16Z",
        "labels":{
          "app":"cockroachdb",
          "controller-revision-hash":"cockroachdb-68dfd7ddc5",
          "statefulset.kubernetes.io/pod-name":"cockroachdb-2"
        },
        "annotations":{
          "kubernetes.io/config.seen":"2020-06-03T08:53:17.000280894Z",
          "kubernetes.io/config.source":"api"
        },
        "ownerReferences":[
          {
            "apiVersion":"apps/v1",
            "kind":"StatefulSet",
            "name":"cockroachdb",
            "uid":"d8d8194f-afeb-4d8b-afd0-4ca76115538c",
            "controller":true,
            "blockOwnerDeletion":true
          }
        ]
      },
      "spec":{
        "volumes":[
          {
            "name":"datadir",
            "persistentVolumeClaim":{
              "claimName":"datadir-cockroachdb-2"
            }
          },
          {
            "name":"default-token-vz2qj",
            "secret":{
              "secretName":"default-token-vz2qj",
              "defaultMode":420
            }
          }
        ],
        "containers":[
          {
            "name":"cockroachdb",
            "image":"cockroachdb/cockroach:v20.1.1",
            "command":[
              "/bin/bash",
              "-ecx",
              "exec /cockroach/cockroach start --logtostderr --insecure --advertise-host $(hostname -f) --http-addr 0.0.0.0 --join cockroachdb-0.cockroachdb,cockroachdb-1.cockroachdb,cockroachdb-2.cockroachdb --cache 25% --max-sql-memory 25%"
            ],
            "ports":[
              {
                "name":"grpc",
                "containerPort":26257,
                "protocol":"TCP"
              },
              {
                "name":"http",
                "containerPort":8080,
                "protocol":"TCP"
              }
            ],
            "env":[
              {
                "name":"COCKROACH_CHANNEL",
                "value":"kubernetes-insecure"
              }
            ],
            "resources":{
              "limits":{
                "cpu":"5m"
              },
              "requests":{
                "cpu":"3m"
              }
            },
            "volumeMounts":[
              {
                "name":"datadir",
                "mountPath":"/cockroach/cockroach-data"
              },
              {
                "name":"default-token-vz2qj",
                "readOnly":true,
                "mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe":{
              "httpGet":{
                "path":"/health",
                "port":"http",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":30,
              "timeoutSeconds":1,
              "periodSeconds":5,
              "successThreshold":1,
              "failureThreshold":3
            },
            "readinessProbe":{
              "httpGet":{
                "path":"/health?ready=1",
                "port":"http",
                "scheme":"HTTP"
              },
              "initialDelaySeconds":10,
              "timeoutSeconds":1,
              "periodSeconds":5,
              "successThreshold":1,
              "failureThreshold":2
            },
            "terminationMessagePath":"/dev/termination-log",
            "terminationMessagePolicy":"File",
            "imagePullPolicy":"IfNotPresent"
          }
        ],
        "restartPolicy":"Always",
        "terminationGracePeriodSeconds":60,
        "dnsPolicy":"ClusterFirst",
        "serviceAccountName":"default",
        "serviceAccount":"default",
        "nodeName":"minikube",
        "securityContext":{

        },
        "hostname":"cockroachdb-2",
        "subdomain":"cockroachdb",
        "affinity":{
          "podAntiAffinity":{
            "preferredDuringSchedulingIgnoredDuringExecution":[
              {
                "weight":100,
                "podAffinityTerm":{
                  "labelSelector":{
                    "matchExpressions":[
                      {
                        "key":"app",
                        "operator":"In",
                        "values":[
                          "cockroachdb"
                        ]
                      }
                    ]
                  },
                  "topologyKey":"kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName":"default-scheduler",
        "tolerations":[
          {
            "key":"node.kubernetes.io/not-ready",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          },
          {
            "key":"node.kubernetes.io/unreachable",
            "operator":"Exists",
            "effect":"NoExecute",
            "tolerationSeconds":300
          }
        ],
        "priority":0,
        "enableServiceLinks":true
      },
      "status":{
        "phase":"Running",
        "conditions":[
          {
            "type":"Initialized",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:53:17Z"
          },
          {
            "type":"Ready",
            "status":"False",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:53:17Z",
            "reason":"ContainersNotReady",
            "message":"containers with unready status: [cockroachdb]"
          },
          {
            "type":"ContainersReady",
            "status":"False",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:53:17Z",
            "reason":"ContainersNotReady",
            "message":"containers with unready status: [cockroachdb]"
          },
          {
            "type":"PodScheduled",
            "status":"True",
            "lastProbeTime":null,
            "lastTransitionTime":"2020-06-03T08:53:16Z"
          }
        ],
        "hostIP":"172.17.0.2",
        "podIP":"172.18.0.7",
        "startTime":"2020-06-03T08:53:17Z",
        "containerStatuses":[
          {
            "name":"cockroachdb",
            "state":{
              "running":{
                "startedAt":"2020-06-03T08:53:29Z"
              }
            },
            "lastState":{

            },
            "ready":false,
            "restartCount":0,
            "image":"cockroachdb/cockroach:v20.1.1",
            "imageID":"docker-pullable://cockroachdb/cockroach@sha256:1d21991893d8bfd461ed6669cb070ff20f66308aecd4f646ddd44cfff05cc1e2",
            "containerID":"docker://9bc5e28cd82820932c1860af4ad6190f7917abfbce11fb6371673a9d3363082e"
          }
        ],
        "qosClass":"Burstable"
      }
    }
  ]
}
